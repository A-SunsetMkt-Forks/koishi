name: Build

on:
  push:
  pull_request:

jobs:
  prepare:
    runs-on: ubuntu-latest

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - id: cache
        name: Yarn Cache Dir
        run: echo "::set-output name=value::$(yarn cache dir)"
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ github.sha }}
          restore-keys: yarn-lock-
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.cache.outputs.value }}
          key: yarn-cache-${{ github.sha }}-node-16
          restore-keys: yarn-cache-
      - name: Install
        run: yarn

    outputs:
      cache-dir: ${{ steps.cache.outputs.value }}

  build:
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ github.sha }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ github.sha }}-node-16
      - name: Install
        run: yarn
      - name: Build JS
        run: yarn compile
      - name: Build DTS
        run: yarn dtsc --listEmittedFiles
      - name: Build Frontend
        run: yarn fe
      - name: Upload Packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: |
            packages
            plugins

  lint:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs:
      - prepare

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: 16
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ github.sha }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ github.sha }}-node-16
      - name: Install
        run: yarn
      - name: Lint
        run: yarn lint

  unit-test:
    if: ${{ github.event_name == 'push' || github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    needs:
      - prepare

    strategy:
      fail-fast: false
      matrix:
        node-version: [12, 14, 16, 18]

    steps:
      - name: Check out
        uses: actions/checkout@v3
      - name: Set up Node
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: Restore Lockfile
        uses: actions/cache@v2
        with:
          path: yarn.lock
          key: yarn-lock-${{ github.sha }}
      - name: Restore Cache
        uses: actions/cache@v2
        with:
          path: ${{ needs.prepare.outputs.cache-dir }}
          key: yarn-cache-${{ github.sha }}-node-${{ matrix.node-version }}
          restore-keys: yarn-cache-${{ github.sha }}-node
      - name: Install
        run: yarn
      - name: Build JS
        run: yarn compile
      - name: Unit Test
        run: yarn test:json
      - name: Report Coverage
        if: ${{ matrix.node-version == 14 }}
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          file: ./coverage/coverage-final.json
          name: codecov
